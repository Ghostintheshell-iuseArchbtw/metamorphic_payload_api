version: '3.8'

services:
  metamorphic-api:
    build: .
    container_name: metamorphic-payload-api
    ports:
      - "8080:8080"
      - "9090:9090"  # Metrics port
    environment:
      - API_KEY=${API_KEY:-your_secure_api_key_here_minimum_32_characters}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your_jwt_secret_key_here_minimum_64_characters}
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - HOST=0.0.0.0
      - PORT=8080
      - RATE_LIMIT_PER_MINUTE=10
      - MAX_PAYLOAD_SIZE=1024000
      - OUTPUT_DIRECTORY=/app/output
      - PAYLOAD_RETENTION_HOURS=24
      - MAX_CONCURRENT_GENERATIONS=5
      - LOG_LEVEL=INFO
      - LOG_FILE=/app/logs/app.log
      - ENABLE_METRICS=true
      - METRICS_PORT=9090
    volumes:
      - ./logs:/app/logs
      - ./output:/app/output
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - metamorphic-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # Redis for advanced caching and rate limiting (optional)
  redis:
    image: redis:7-alpine
    container_name: metamorphic-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - metamorphic-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-secure_redis_password}

  # Nginx reverse proxy for additional security
  nginx:
    image: nginx:alpine
    container_name: metamorphic-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - metamorphic-api
    restart: unless-stopped
    networks:
      - metamorphic-network

  # Prometheus for metrics collection (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: metamorphic-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - metamorphic-network

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: metamorphic-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - metamorphic-network

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  metamorphic-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
